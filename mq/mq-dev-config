* Â© Copyright IBM Corporation 2017
*
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.

STOP LISTENER('SYSTEM.DEFAULT.LISTENER.TCP')

* Developer queues
DEFINE QLOCAL('SAIF.QUEUE.1') REPLACE
DEFINE QLOCAL('SAIF.QUEUE.2') REPLACE
DEFINE QLOCAL('SAIF.QUEUE.3') REPLACE
DEFINE QLOCAL('SAIF.DEAD.LETTER.QUEUE') REPLACE

* Use a different dead letter queue, for undeliverable messages
ALTER QMGR DEADQ('SAIF.DEAD.LETTER.QUEUE')

* Developer topics
DEFINE TOPIC('SAIF.BASE.TOPIC') TOPICSTR('dev/') REPLACE

* Developer connection authentication
ALTER QMGR CHLAUTH(DISABLED) CONNAUTH(' ')
REFRESH SECURITY(*) TYPE(CONNAUTH)

* Developer channels (Application + Admin)
DEFINE CHANNEL('SAIF.ADMIN.SVRCONN') CHLTYPE(SVRCONN) REPLACE
DEFINE CHANNEL('SAIF.APP.SVRCONN') CHLTYPE(SVRCONN) REPLACE

* Developer channel authentication rules
SET CHLAUTH('*') TYPE(ADDRESSMAP) ADDRESS('*') USERSRC(NOACCESS) DESCR('Back-stop rule - Blocks everyone') ACTION(REPLACE)
SET CHLAUTH('SAIF.APP.SVRCONN') TYPE(ADDRESSMAP) ADDRESS('*') USERSRC(CHANNEL) CHCKCLNT(REQUIRED) DESCR('Allows connection via APP channel') ACTION(REPLACE)
SET CHLAUTH('SAIF.ADMIN.SVRCONN') TYPE(BLOCKUSER) USERLIST('nobody') DESCR('Allows admins on ADMIN channel') ACTION(REPLACE)
SET CHLAUTH('SAIF.ADMIN.SVRCONN') TYPE(USERMAP) CLNTUSER('admin') USERSRC(CHANNEL) DESCR('Allows admin user to connect via ADMIN channel') ACTION(REPLACE)

* Developer TLS
ALTER QMGR CERTLABL('queuemanagercertificate')

* Developer listener
DEFINE LISTENER('SAIF.LISTENER.TCP') TRPTYPE(TCP) PORT(1411) CONTROL(QMGR) REPLACE
START LISTENER('SAIF.LISTENER.TCP')
